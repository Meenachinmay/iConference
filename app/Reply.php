<?php

namespace App;

use Illuminate\Database\Eloquent\Model;

class Reply extends Model
{

    use Favorites_info, RecordsActivity;

    protected $fillable = ['user_id', 'thread_id', 'body'];


    // with every single reply always load 'owner' and 'favorites table information'
    protected $with = ['owner', 'favorites'];


    // appending the favorites count with every reply
    protected $appends = ['favoritesCount', 'isFavorited'];


    protected static function boot()
    {
        parent::boot(); // TODO: Change the autogenerated stub


        // whenever a thread is created please increment the thread count in Thread table
        static::created(function ($reply){
           $reply->thread->increment('replies_count');
        });


        // whenever a thread is deleted please decrement the thread count in Thread table
        static::deleted(function ($reply){
            $reply->thread->decrement('replies_count');
        });

        // delete related favorites ids from favorites table when deleting a reply
        static::deleting(function ($reply){

            $reply->favorites->each(function ($favorite) {

                $favorite->delete();

            });
        });
    }

    // path for a reply
    public function path()
    {
        return "/replies/{$this->id}";
    }

    // replies belongs to owner (owner means the creater of the threads)
    public function owner()
    {
        return $this->belongsTo(User::class, 'user_id');
    }

    //
    public function thread()
    {
        return $this->belongsTo(Thread::class);
    }

}
